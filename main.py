# –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º–∞
import telebot
import random
from datetime import datetime
from telebot import types
import os
# –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω—ã
from dotenv import load_dotenv
load_dotenv()
# –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è TOKEN, –æ–ø–∏—Å–∞–Ω–Ω–∞—è –≤ —Ñ–∞–π–ª–µ .env,
# –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
token = os.getenv('TOKEN')
bot = telebot.TeleBot(token)
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–∏–ø—ã –∏–∑ –º–æ–¥—É–ª—è, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏
from telebot import types
import requests
import re

#–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç
@bot.message_handler(content_types=['text'])
def get_start_messages(message):
  if message.text == "/start":
    # –ì–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞—Ä—Ç–∞
    keyboard = types.InlineKeyboardMarkup()
    key_zakaz = types.InlineKeyboardButton(text='–ú–Ω–µ –Ω—É–∂–Ω—ã –º–∞—Ç–µ—Ä–∏–∞–ª—ã –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞',
                                         callback_data='zakazchik')
    # –ò –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω
    keyboard.add(key_zakaz)
    key_doc = types.InlineKeyboardButton(text='–ú–Ω–µ –Ω—É–∂–Ω—ã –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                                         callback_data='doc')
    keyboard.add(key_doc)
    key_dog = types.InlineKeyboardButton(text='–ü—Ä–æ—Å—Ç–æ —Ö–æ—á—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–∏–ª–æ—Ç—É üê∂ üê±',
                                         callback_data='dog')
    keyboard.add(key_dog)
    bot.send_message(
        message.from_user.id,
        text=
        '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ üëª –ß–µ–º —Ç–µ–±–µ –ø–æ–º–æ—á—å?',
        reply_markup=keyboard)
  elif message.text == "/help":
    bot.send_message(message.from_user.id, "–î–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –º–µ–Ω—é –±–æ—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –º–µ–Ω—é /start.\n–ë–æ—Ç —É–º–µ–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å <b>—Ä–µ–≥–ª–∞–º–µ–Ω—Ç—ã</b> –∏ <b>–∫–æ–Ω—Ü–µ–ø—Ü–∏–∏</b> –ø–æ —Ä–∞–∑–Ω—ã–º —Ñ–∞–∑–∞–º –µ—Å–ª–∏ —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∏–º–µ—Ä—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏", parse_mode="HTML")
  elif message.text == "/about":
    bot.send_message(message.from_user.id, "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Ä–∞–±–æ—Ç–µ. –í –Ω–µ–º –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞ –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º, —Ç–∞–∫ –∏ —à–∞–±–ª–æ–Ω—ã –∏ –æ–±—Ä–∞–∑—Ü—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∑–∞—Ö. –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞-–ø–æ–º–æ—â–Ω–∏–∫–∞ –Ω–∞–∂–º–∏ –∫–æ–º–∞–Ω–¥—É –º–µ–Ω—é /start. –î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∞–≤—Ç–æ—Ä–∞ –±–æ—Ç–∞, –Ω–∞–ø–∏—à–∏ –∞–∫–∫–∞—É–Ω—Ç—É @ksakharova")
    scheme = open('Bot-scheme.jpg', 'rb')
    bot.send_photo(message.from_user.id, photo=scheme)
  elif message.text == "–†–µ–≥–ª–∞–º–µ–Ω—Ç":
    keyboard = types.InlineKeyboardMarkup()
    key_phase2 = types.InlineKeyboardButton(text='–§–∞–∑–∞_2. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞', callback_data='phase2')
    keyboard.add(key_phase2)
    key_phase3 = types.InlineKeyboardButton(text='–§–∞–∑–∞_3. –í–≤–æ–¥ –≤ –û–ü–≠', callback_data='phase3')
    keyboard.add(key_phase3)
    bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–∑—É –ø—Ä–æ–µ–∫—Ç–∞", reply_markup=keyboard)
  elif message.text == "–ö–æ–Ω—Ü–µ–ø—Ü–∏—è":
    keyboard = types.InlineKeyboardMarkup()
    key_phase1 = types.InlineKeyboardButton(text='–§–∞–∑–∞_1. –û–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¢–ó', callback_data='phase1')
    keyboard.add(key_phase1)
    key_phase4 = types.InlineKeyboardButton(text='–§–∞–∑–∞_4. –û–ü–≠', callback_data='phase4')
    keyboard.add(key_phase4)
    bot.send_message(message.from_user.id, "–£–∫–∞–∂–∏—Ç–µ —Ñ–∞–∑—É –ø—Ä–æ–µ–∫—Ç–∞", reply_markup=keyboard)
  else:
    bot.send_message(message.from_user.id, "–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ù–∞–ø–∏—à–∏ /help.")
def get_url_dog():
  contents = requests.get('https://random.dog/woof.json').json()
  url = contents['url']
  return url
def get_url_cat():
  response = requests.get('https://api.thecatapi.com/v1/images/search').json()
  random_cat = response[0].get('url')
  return random_cat
def random_animal():
    animal = [get_url_cat(), get_url_dog()]
    return random.choice(animal)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
  # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫, –≤—ã–±–∏—Ä–∞–µ–º –ø—É—Ç—å
  if call.data == "zakazchik":
    msg1 = '–í—ã–±–µ—Ä–∏ –ø—Ä–æ–µ–∫—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ç–µ–±–µ –Ω—É–∂–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã'
        # –ì–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
    keyboard = types.InlineKeyboardMarkup()
    key_pr_1 = types.InlineKeyboardButton(text='–ü—Ä–æ–µ–∫—Ç_1', callback_data='proekt_1')
    keyboard.add(key_pr_1)
    key_pr_2 = types.InlineKeyboardButton(text='–ü—Ä–æ–µ–∫—Ç_2', callback_data='proekt_2')
    keyboard.add(key_pr_2)
    bot.send_message(call.message.chat.id, msg1, reply_markup=keyboard)
  elif call.data == "doc":
    msg4 = '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫'
    bot.send_message(call.message.chat.id, msg4)
  elif call.data == "dog":
      bot.send_photo(call.message.chat.id, photo=random_animal())
  elif call.data == "proekt_1":
      doc = open('Document_1_Proj_1.docx', 'rb')
      bot.send_document(call.message.chat.id, doc)
  elif call.data == "proekt_2":
      doc = open('Document_1_Proj_2.docx', 'rb')
      bot.send_document(call.message.chat.id, doc)
  elif call.data == "phase2":
      bot.send_message(call.message.chat.id, '–î–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–ª–µ–¥—É–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –∫–æ–Ω—Ç–∞–∫—Ç—É')
      bot.send_contact(call.message.chat.id, '+7(123)456-78-90', '–ò–≤–∞–Ω', '–ü–µ—Ç—Ä–æ–≤')
  elif call.data == "phase3":
      doc1 = open('Document_3.docx', 'rb')
      doc2 = open('Document_4.docx', 'rb')
      bot.send_document(call.message.chat.id, doc1)
      bot.send_document(call.message.chat.id, doc2)
  elif call.data == "phase1":
      bot.send_message(call.message.chat.id, '–ü—Ä–∏–º–µ—Ä–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —ç—Ç–æ–π —Ñ–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç')
  elif call.data == "phase4":
      bot.send_message(call.message.chat.id, '–ü—Ä–∏–º–µ—Ä–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —ç—Ç–æ–π —Ñ–∞–∑–µ –ø–æ–∫–∞ –Ω–µ—Ç')

bot.polling(none_stop=True, interval=0)